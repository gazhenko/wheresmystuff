package edu.gatech.cs2340.thenullterminators.wheresmystuff;

import java.io.Serializable;
import java.util.ArrayList;

/**
 * This class searches the text files for specified items then returns the results
 * 
 * @author theNullTerminators (Group 12)
 * @version 0.1
 *
 */
public class Search implements Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public static ArrayList<Item> items = new ArrayList<Item>();
	
	public static void addItem(Item item)
	{
		items.add(item);
	}
	
	public static ArrayList<Item> byTitle(String title)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getTitle().toLowerCase().contains(title.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byTitle(String title,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getTitle().toLowerCase().contains(title.toLowerCase()))
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByTitle(String title,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getTitle().toLowerCase().contains(title.toLowerCase()))
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byCategory(String category)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for (int i = 0; i < items.size(); i++)
		{
			if (items.get(i).getCategory().toLowerCase().equals(category.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byCategory(String category, ArrayList<Item> uList)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for (int i = 0; i < uList.size(); i++)
		{
			if (uList.get(i).getCategory().toLowerCase().equals(category.toLowerCase()))
			{
				newList.add(uList.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByCategory(String category,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getCategory().toLowerCase().equals(category.toLowerCase()))
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byCity(String city)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getCity().toLowerCase().equals(city.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byCity(String city,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getCity().toLowerCase().equals(city.toLowerCase()))
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByCity(String city,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getCity().toLowerCase().equals(city.toLowerCase()))
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byState(String state)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getState().toLowerCase().equals(state.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byState(String state,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getState().toLowerCase().equals(state.toLowerCase()))
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByState(String state,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getState().toLowerCase().equals(state.toLowerCase()))
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byDescription(String description)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getDescription().toLowerCase().equals(description.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDescription(String description,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getDescription().toLowerCase().equals(description.toLowerCase()))
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byIsFound(boolean isFound)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getIsFound() ==isFound)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byIsFound(boolean isFound,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getIsFound() == isFound)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byReward(String reward)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getReward().toLowerCase().equals(reward.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byReward(String reward,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getReward().toLowerCase().equals(reward.toLowerCase()))
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byMonthExact(int month)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getMonth() == month)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byMonthExact(int month,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getMonth() == month)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByMonth(int month,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getMonth() == month)
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byMonthAfter(int month)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getMonth() > month)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byMonthAfter(int month,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getMonth() > month)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byMonthBefore(int month)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getMonth() < month)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byMonthBefore(int month,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getMonth() < month)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDayExact(int day)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getDay() == day)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDayExact(int day,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getDay() == day)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByDay(int day,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getDay() == day)
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byDayAfter(int day)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getDay() > day)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDayAfter(int day,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getDay() > day)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDayBefore(int day)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getDay() < day)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byDayBefore(int day,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getDay() < day)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byYearExact(int year)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getYear() == year)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byYearExact(int year,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getYear() == year)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static void forMatchByYear(int year,ArrayList<Item> uList)
	{
		for(int i = 0;i <uList.size();i++)
		{
			if(uList.get(i).getYear() == year)
			{
				uList.get(i).incSortPri();
			}
		}
	}
	
	public static ArrayList<Item> byYearAfter(int year)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getYear() > year)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byYearAfter(int year,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getYear() > year)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byYearBefore(int year)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getYear() < year)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byYearBefore(int year,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getYear() < year)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byIsResolved(boolean isResolved)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < items.size();i++)
		{
			if(items.get(i).getIsResolved() ==isResolved)
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byIsResolved(boolean isResolved,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0;i < ulist.size();i++)
		{
			if(ulist.get(i).getIsResolved() == isResolved)
			{
				newList.add(ulist.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byUser(String user)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0; i < items.size();i++)
		{
			if(items.get(i).getUser().toLowerCase().equals(user.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}
	
	public static ArrayList<Item> byUser(String user,ArrayList<Item> ulist)
	{
		ArrayList<Item> newList = new ArrayList<Item>();
		for(int i = 0; i < ulist.size();i++)
		{
			if(ulist.get(i).getUser().toLowerCase().equals(user.toLowerCase()))
			{
				newList.add(items.get(i));
			}
		}
		return newList;
	}

}
